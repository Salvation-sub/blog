(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{455:function(t,s,a){"use strict";a.r(s);var n=a(54),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"스택-stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#스택-stack"}},[t._v("#")]),t._v(" 스택 (Stack)")]),t._v(" "),a("h2",{attrs:{id:"꼭-알아둬야-할-자료-구조-스택-stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#꼭-알아둬야-할-자료-구조-스택-stack"}},[t._v("#")]),t._v(" 꼭 알아둬야 할 자료 구조: 스택 (Stack)")]),t._v(" "),a("ul",[a("li",[t._v("데이터를 제한적으로 접근할 수 있는 구조\n"),a("ul",[a("li",[t._v("한쪽 끝에서만 자료를 넣거나 뺄 수 있는 구조")])])]),t._v(" "),a("li",[t._v("가장 나중에 쌓은 데이터를 가장 먼저 빼낼 수 있는 데이터 구조")])]),t._v(" "),a("h2",{attrs:{id:"_1-스택-구조"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-스택-구조"}},[t._v("#")]),t._v(" 1. 스택 구조")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("스택은 LIFO(Last In, Fisrt Out) 또는 FILO(First In, Last Out) 데이터 관리 방식을 따름")]),t._v(" "),a("ul",[a("li",[t._v("LIFO: 마지막에 넣은 데이터를 가장 먼저 추출하는 데이터 관리 정책")]),t._v(" "),a("li",[t._v("FILO: 처음에 넣은 데이터를 가장 마지막에 추출하는 데이터 관리 정책")])])]),t._v(" "),a("li",[a("p",[t._v("대표적인 스택의 활용")]),t._v(" "),a("ul",[a("li",[t._v("컴퓨터 내부의 프로세스 구조의 함수 동작 방식")])])]),t._v(" "),a("li",[a("p",[t._v("주요 기능")]),t._v(" "),a("ul",[a("li",[t._v("push(): 데이터를 스택에 넣기")]),t._v(" "),a("li",[t._v("pop(): 데이터를 스택에서 꺼내기")])])])]),t._v(" "),a("img",{attrs:{src:"http://www.fun-coding.org/00_Images/stack.png"}}),t._v(" "),a("h2",{attrs:{id:"_2-스택-구조와-프로세스-스택"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-스택-구조와-프로세스-스택"}},[t._v("#")]),t._v(" 2. 스택 구조와 프로세스 스택")]),t._v(" "),a("ul",[a("li",[t._v("스택 구조는 프로세스 실행 구조의 가장 기본\n"),a("ul",[a("li",[t._v("함수 호출시 프로세스 실행 구조를 스택과 비교해서 이해 필요")])])])]),t._v(" "),a("h4",{attrs:{id:"재귀-함수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#재귀-함수"}},[t._v("#")]),t._v(" 재귀 함수")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("recursive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ended"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        recursive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"returned"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nrecursive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 자기 자신의 함수 안에서 자신을 호출하는게 재귀함수")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ended")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# returned 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# returned 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# returned 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# returned 3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# returned 4")]),t._v("\n")])])]),a("h2",{attrs:{id:"_3-자료-구조-스택의-장단점"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-자료-구조-스택의-장단점"}},[t._v("#")]),t._v(" 3. 자료 구조 스택의 장단점")]),t._v(" "),a("ul",[a("li",[t._v("장점\n"),a("ul",[a("li",[t._v("구조가 단순해서, 구현이 쉽다.")]),t._v(" "),a("li",[t._v("데이터 저장/읽기 속도가 빠르다.")])])]),t._v(" "),a("li",[t._v("단점 (일반적인 스택 구현시)\n"),a("ul",[a("li",[t._v("데이터 최대 갯수를 미리 정해야 한다.\n"),a("ul",[a("li",[t._v("파이썬의 경우 재귀 함수는 1000번까지만 호출이 가능함")])])]),t._v(" "),a("li",[t._v("저장 공간의 낭비가 발생할 수 있음\n"),a("ul",[a("li",[t._v("미리 최대 갯수만큼 저장 공간을 확보해야 함")])])])])])]),t._v(" "),a("blockquote",[a("p",[t._v("스택은 단순하고 빠른 성능을 위해 사용되므로, 보통 배열 구조를 활용해서 구현하는 것이 일반적임.\n이 경우, 위에서 열거한 단점이 있을 수 있음")])]),t._v(" "),a("h2",{attrs:{id:"_4-파이썬-리스트-기능에서-제공하는-메서드로-스택-사용해보기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-파이썬-리스트-기능에서-제공하는-메서드로-스택-사용해보기"}},[t._v("#")]),t._v(" 4. 파이썬 리스트 기능에서 제공하는 메서드로 스택 사용해보기")]),t._v(" "),a("ul",[a("li",[t._v("append(push), pop 메서드 제공")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("data_stack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndata_stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndata_stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndata_stack\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [1, 2]")]),t._v("\n\ndata_stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5-프로그래밍-연습"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-프로그래밍-연습"}},[t._v("#")]),t._v(" 5. 프로그래밍 연습")]),t._v(" "),a("h3",{attrs:{id:"연습1-리스트-변수로-스택을-다루는-pop-push-기능-구현해보기-pop-push-함수-사용하지-않고-직접-구현해보기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#연습1-리스트-변수로-스택을-다루는-pop-push-기능-구현해보기-pop-push-함수-사용하지-않고-직접-구현해보기"}},[t._v("#")]),t._v(" 연습1: 리스트 변수로 스택을 다루는 pop, push 기능 구현해보기 (pop, push 함수 사용하지 않고 직접 구현해보기)")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("stack_list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    stack_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stack_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" stack_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\npop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 9")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);