(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{456:function(t,a,s){"use strict";s.r(a);var n=s(54),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"큐-queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#큐-queue"}},[t._v("#")]),t._v(" 큐 (Queue)")]),t._v(" "),s("h2",{attrs:{id:"_1-큐-구조"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-큐-구조"}},[t._v("#")]),t._v(" 1. 큐 구조")]),t._v(" "),s("ul",[s("li",[t._v("줄을 서는 행위와 유사")]),t._v(" "),s("li",[t._v("가장 먼저 넣은 데이터를 가장 먼저 꺼낼 수 있는 구조\n"),s("ul",[s("li",[t._v("음식점에서 가장 먼저 줄을 선 사람이 제일 먼저 음식점에 입장하는 것과 동일")]),t._v(" "),s("li",[t._v("FIFO (First-In, First-Out) 또는 LILO (Last-In, Last-Out) 방식으로 스택과 꺼내는 순서가 반대")])])])]),t._v(" "),s("img",{attrs:{src:"https://www.fun-coding.org/00_Images/queue.png"}}),t._v(" "),s("h2",{attrs:{id:"_2-알아둘-용어"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-알아둘-용어"}},[t._v("#")]),t._v(" 2. 알아둘 용어")]),t._v(" "),s("ul",[s("li",[t._v("Enqueue: 큐에 데이터를 넣는 기능")]),t._v(" "),s("li",[t._v("Dequeue: 큐에서 데이터를 꺼내는 기능")])]),t._v(" "),s("h2",{attrs:{id:"_3-파이썬-queue-라이브러리-활용해서-큐-자료-구조-사용하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-파이썬-queue-라이브러리-활용해서-큐-자료-구조-사용하기"}},[t._v("#")]),t._v(" 3. 파이썬 queue 라이브러리 활용해서 큐 자료 구조 사용하기")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("queue 라이브러리에는 다양한 큐 구조로 Queue(), LifoQueue(), PriorityQueue() 제공")])]),t._v(" "),s("li",[s("p",[t._v("프로그램을 작성할 때 프로그램에 따라 적합한 자료 구조를 사용")]),t._v(" "),s("ul",[s("li",[t._v("Queue(): 가장 일반적인 큐 자료 구조")]),t._v(" "),s("li",[t._v("LifoQueue(): 나중에 입력된 데이터가 먼저 출력되는 구조 (스택 구조라고 보면 됨)")]),t._v(" "),s("li",[t._v("PriorityQueue(): 데이터마다 우선순위를 넣어서, 우선순위가 높은 순으로 데이터 출력")])]),t._v(" "),s("blockquote",[s("p",[t._v("일반적인 큐 외에 다양한 정책이 적용된 큐들이 있음")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-1-queue-로-큐-만들기-가장-일반적인-큐-fifo-first-in-first-out"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-queue-로-큐-만들기-가장-일반적인-큐-fifo-first-in-first-out"}},[t._v("#")]),t._v(" 3.1. Queue()로 큐 만들기 (가장 일반적인 큐, FIFO(First-In, First-Out))")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" queue\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 큐 파이썬 라이브러리 가져와서 변수화\ndata_queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 큐에 데이터 넣기\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"funcoding"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 데이터 사이즈 측정 output "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("qsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 데이터 빼기 output funcoding\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 데이터 사이즈 측정 output "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("qsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 데이터 빼기 output "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_3-2-lifoqueue-로-큐-만들기-lifo-last-in-first-out"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-lifoqueue-로-큐-만들기-lifo-last-in-first-out"}},[t._v("#")]),t._v(" 3.2. LifoQueue()로 큐 만들기 (LIFO(Last-In, First-Out))")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" queue\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" LIFO 큐 가져와서 변수화\ndata_queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LifoQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"funcoding"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 데이터 사이즈 측정 output "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("qsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 데이터 빼기 output "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-3-priorityqueue-로-큐-만들기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-priorityqueue-로-큐-만들기"}},[t._v("#")]),t._v(" 3.3. PriorityQueue()로 큐 만들기")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" queue\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" Priority 큐 가져와서 변수화\ndata_queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PriorityQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 튜플 형태로 데이터를 삽입\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"korea"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("put"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"china"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 데이터 사이즈 측정 output "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("qsize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 데이터 빼기 output "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 데이터 빼기 output "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"korea"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndata_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"참고-어디에-큐가-많이-쓰일까"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#참고-어디에-큐가-많이-쓰일까"}},[t._v("#")]),t._v(" 참고: 어디에 큐가 많이 쓰일까?")]),t._v(" "),s("ul",[s("li",[t._v("멀티 태스킹을 위한 프로세스 스케쥴링 방식을 구현하기 위해 많이 사용됨 (운영체제 참조)")])]),t._v(" "),s("blockquote",[s("p",[t._v("큐의 경우에는 장단점 보다는 (특별히 언급되는 장단점이 없음), 큐의 활용 예로 프로세스 스케쥴링 방식을 함께 이해해두는 것이 좋음")])]),t._v(" "),s("h2",{attrs:{id:"_4-프로그래밍-연습"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-프로그래밍-연습"}},[t._v("#")]),t._v(" 4. 프로그래밍 연습")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("\nqueue_list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" append metho를 활용해서 "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),t._v("에 데이터를 넣는다"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("enqueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    queue_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dequeue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 첫번째 데이터를 가져오고\n    data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" queue_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 가져온 데이터를 삭제한다음 리턴\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" queue_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" data\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" 반복문틍을 통해 데이터를 넣어줍니다\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    enqueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),t._v("에 들어가 있는 데이터 길이 출력 out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 부터 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" 까지 차례대로 출력\ndequeue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);