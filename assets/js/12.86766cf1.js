(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{393:function(t,v,l){t.exports=l.p+"assets/img/outer_environment.a59eb3f5.png"},481:function(t,v,l){"use strict";l.r(v);var e=l(54),_=Object(e.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"실행컨텍스트란"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#실행컨텍스트란"}},[t._v("#")]),t._v(" 실행컨텍스트란?")]),t._v(" "),e("ul",[e("li",[t._v("실행컨텍스트란 스코프, 호이스팅, this, 클로저 등의 동작원리를 담고 있는 자바스크립트의 핵심원리다.")]),t._v(" "),e("li",[t._v("코드를 실행하는데 필요한 환경을 제공하는 객체")])]),t._v(" "),e("h1",{attrs:{id:"스코프란"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#스코프란"}},[t._v("#")]),t._v(" 스코프란?")]),t._v(" "),e("ul",[e("li",[t._v("스코프 체인 : 내부함수가 외부함수의 변수를 참조할 수 있게하는 자바스크립트의 물리적인 관계. 즉, 식별자를 결정할 때 활용하는 스코프들의 연결리스트이다.\n"),e("ul",[e("li",[t._v("스코프 레벨 :\n"),e("ul",[e("li",[t._v("블록 레벨 스코프: if문 , for 문, 함수 (ex: 대부분 프로그래밍 언어)")]),t._v(" "),e("li",[t._v("함수 레벨 스코프: only 함수 (ex: javascript)\n"),e("ul",[e("li",[t._v("자바스크립트가 블록 레벨 스코프를 표현하기 위해 나온 것이 let, const (es6) 변수 선언 키워드 입니다.")])])])])]),t._v(" "),e("li",[t._v("상위 스코프 :\n"),e("ul",[e("li",[t._v("함수가 호출되는 시점에 결정 : 동적 스코프 (프로그램 런타임, 즉 실행컨텍스트에서 정의되는 스코프)")]),t._v(" "),e("li",[t._v("함수가 정의되는 시점에 결정 : 정적 스코프 (레시컬 스코프) === 자바스크립트에서 함수는 태어나면 본인의 내부 슬롯에 상위 스코프에 대한 참조를 저장한다.")])])])])])]),t._v(" "),e("h1",{attrs:{id:"자바스크립트의-실행-컨텍스트"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#자바스크립트의-실행-컨텍스트"}},[t._v("#")]),t._v(" 자바스크립트의 실행 컨텍스트")]),t._v(" "),e("ul",[e("li",[t._v("코드를 실행하는데 필요한 조건이나 상태 또는 식별자를 더욱 효율적으로 결정하기 위한 수단으로써 필요한 정보를 한데 모아 제공하는 객체")])]),t._v(" "),e("ol",[e("li",[t._v("Record")])]),t._v(" "),e("ul",[e("li",[t._v("자바스크립트 코드를 실행시키면 자바스크립트 엔진은 콜 스택이라는 통에 전역 실행컨텍스트(Record, Outer)를 담습니다.")]),t._v(" "),e("li",[t._v("호이스팅\n"),e("ul",[e("li",[t._v("변수를 선언하면 자바스크립트 엔진이 먼저 전체 코드를 스캔하면서 Environment Record에 미리 기록해놓습니다.")])]),t._v(" "),e("ol",[e("li",[t._v("변수 호이스팅:")])]),t._v(" "),e("ul",[e("li",[t._v("생성단계 : 실행 컨텍스트 생성 , 선언문만 실행해서 Environment Record에 기록 (var는 초기화)\n"),e("ul",[e("li",[t._v("var : 초기화 진행 = undefined")]),t._v(" "),e("li",[t._v("let, const (일시적 사각지대): 선언 이전에 식별자를 참조할 수 없어 Reference Error 발생")])])]),t._v(" "),e("li",[t._v("실행단계 : 선언문 외 나머지 코드 순차적 실행 , Environment Record 참조하거나 업데이트")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("함수 호이스팅:")])]),t._v(" "),e("ul",[e("li",[t._v("함수 표현식 (화살표 함수) : 이 경우에는 변수 호이스팅과 같은 방식으로 작동합니다.")]),t._v(" "),e("li",[t._v("함수 선언문 (function 키워드를 사용할 경우) : 선언과 동시에 함수가 생성되어 선언 전에도 함수를 사용할 수 있습니다.")])])])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("Outer (Outer Environment Reference : 바깥 Lexical Environment를 가리킴)")])]),t._v(" "),e("p",[e("img",{attrs:{src:l(393),alt:"캡처"}})]),t._v(" "),e("ul",[e("li",[t._v("식별자 결정 : 코드에서 변수나 함수의 값을 결정하는 것")]),t._v(" "),e("li",[t._v("콜 스택 안에 동일한 식별자가 여러개일 떄 자바스크립트가 outer을 어떻게 활용하는가?\n"),e("ul",[e("li",[t._v("스코프체인 : 식별자를 결정할 떄 활용하는 스코프들의 연결리스트 (outer)")]),t._v(" "),e("li",[t._v("스코프체이닝: 식별자를 결정하기 위해 타고타고 가는 과정을 스코프 체이닝")])])])])])}),[],!1,null,null,null);v.default=_.exports}}]);