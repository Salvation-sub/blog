(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{484:function(t,a,s){"use strict";s.r(a);var n=s(54),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"how-to-solve-problems"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#how-to-solve-problems"}},[t._v("#")]),t._v(" How to solve problems")]),t._v(" "),s("h2",{attrs:{id:"what-are-companies-looking-for"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-are-companies-looking-for"}},[t._v("#")]),t._v(" What are Companies Looking for?")]),t._v(" "),s("ol",[s("li",[t._v("Analytic Skills: How can you think through problems and analyze things?")]),t._v(" "),s("li",[t._v("Coding SKills: Do you code well, by writing clean, simple, organized, readable code?")]),t._v(" "),s("li",[t._v("Technical Skills: Do you know the fundamentals of the job you're applying for?")]),t._v(" "),s("li",[t._v("Communication Skills: Does your personality match the companies' culture?")])]),t._v(" "),s("h2",{attrs:{id:"what-we-need-for-coding-interview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-we-need-for-coding-interview"}},[t._v("#")]),t._v(" What we need for coding interview?")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Data Structures")]),t._v(" "),s("ol",[s("li",[t._v("Arrays")]),t._v(" "),s("li",[t._v("Stacks")]),t._v(" "),s("li",[t._v("Queues")]),t._v(" "),s("li",[t._v("Linked Lists")]),t._v(" "),s("li",[t._v("Trees")]),t._v(" "),s("li",[t._v("Tries")]),t._v(" "),s("li",[t._v("Graphs")]),t._v(" "),s("li",[t._v("Hash Tables")])])]),t._v(" "),s("li",[s("p",[t._v("Algorithms")]),t._v(" "),s("ol",[s("li",[t._v("Sorting")]),t._v(" "),s("li",[t._v("Dynamic Programming")]),t._v(" "),s("li",[t._v("BFS + DFS (Searching)")]),t._v(" "),s("li",[t._v("Recursion")])])])]),t._v(" "),s("h2",{attrs:{id:"step-by-step-through-a-problem"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-by-step-through-a-problem"}},[t._v("#")]),t._v(" Step by step through a problem")]),t._v(" "),s("ol",[s("li",[t._v("When the interviewer says the question, write down the key points at the top (i.e. sorted\narray). Make sure you have all the details. Show how organized you are.")]),t._v(" "),s("li",[t._v("Make sure you double check: What are the inputs? What are the outputs?")]),t._v(" "),s("li",[t._v("What is the most important value of the problem? Do you have time, and space and memory,\netc.. What is the main goal?")]),t._v(" "),s("li",[t._v("Don't be annoying and ask too many questions.")]),t._v(" "),s("li",[t._v("Start with the naive/brute force approach. First thing that comes into mind. It shows that\nyou’re able to think well and critically (you don't need to write this code, just speak about it).")]),t._v(" "),s("li",[t._v("Tell them why this approach is not the best (i.e. O(n^2) or higher, not readable, etc...)")]),t._v(" "),s("li",[t._v("Walk through your approach, comment things and see where you may be able to break things.\nAny repetition, bottlenecks like O(N^2), or unnecessary work? Did you use all the information\nthe interviewer gave you? Bottleneck is the part of the code with the biggest Big O. Focus on\nthat. Sometimes this occurs with repeated work as well.")]),t._v(" "),s("li",[t._v("Before you start coding, walk through your code and write down the steps you are going to\nfollow.")]),t._v(" "),s("li",[t._v("Modularize your code from the very beginning. Break up your code into beautiful small pieces\nand add just comments if you need to.")]),t._v(" "),s("li",[t._v("Start actually writing your code now. Keep in mind that the more you prepare and understand\nwhat you need to code, the better the whiteboard will go. So never start a whiteboard\ninterview not being sure of how things are going to work out. That is a recipe for disaster.\nKeep in mind: A lot of interviews ask questions that you won’t be able to fully answer on time.\nSo think: What can I show in order to show that I can do this and I am better than other\ncoders. Break things up in Functions (if you can’t remember a method, just make up a function\nand you will at least have it there. Write something, and start with the easy part.")]),t._v(" "),s("li",[t._v("Think about error checks and how you can break this code. Never make assumptions about the\ninput. Assume people are trying to break your code and that Darth Vader is using your\nfunction. How will you safeguard it? Always check for false inputs that you don’t want. Here is\na trick: Comment in the code, the checks that you want to do… write the function, then tell the\ninterviewer that you would write tests now to make your function fail (but you won't need to\nactually write the tests).")]),t._v(" "),s("li",[t._v("Don’t use bad/confusing names like i and j. Write code that reads well.")]),t._v(" "),s("li",[t._v("Test your code: Check for no params, 0, undefined, null, massive arrays, async code, etc… Ask\nthe interviewer if we can make assumption about the code. Can you make the answer return\nan error? Poke holes into your solution. Are you repeating yourself?")]),t._v(" "),s("li",[t._v("Finally talk to the interviewer where you would improve the code. Does it work? Are there\ndifferent approaches? Is it readable? What would you google to improve? How can\nperformance be improved? Possibly: Ask the interviewer what was the most interesting\nsolution you have seen to this problem")]),t._v(" "),s("li",[t._v("If your interviewer is happy with the solution, the interview usually ends here. It is also\ncommon that the interviewer asks you extension questions, such as how you would handle the\nproblem if the whole input is too large to fit into memory, or if the input arrives as a stream.\nThis is a common follow-up question at Google, where they care a lot about scale. The answer\nis usually a divide-and-conquer approach — perform distributed processing of the data and only\nread certain chunks of the input from disk into memory, write the output back to disk and\ncombine them later.")])]),t._v(" "),s("h2",{attrs:{id:"interview-question-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#interview-question-1"}},[t._v("#")]),t._v(" Interview Question 1")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Given 2 arrays, create a function that let's a user know(true/false) whether those")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// two arrays contain any common items")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// For Example:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// const array1 = ["a", "b", "c", "x"];')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// const array2 = ["z\', "y", "i"];')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// should return false.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -------------------")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// const array1 = ["a", "b", "c", "x"];')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// const array2 = ["z\', "y", "x"];')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// should return true.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2 parameters - arrays - no size limit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return true or false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsCommonItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" arr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// O(1) space complexity")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsCommonItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// O (a*b)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// find better solution")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// array1 ==> obj {")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   a: true,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   b: true,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   c: true,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   x: true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// array2[index] === obj.properties")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsCommonItem2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// loop through first array and create object")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// where properties === items in the array")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// loop through second array and check if item")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// in second array exists on created object")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// O(a) space Complexity")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsCommonItem2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// O (a+b) Time Complexity is better")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// more readable solution")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsCommonItem3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("some")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" arr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsCommonitem3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);